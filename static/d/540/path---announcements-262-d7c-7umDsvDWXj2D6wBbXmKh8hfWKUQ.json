{"data":{"site":{"siteMetadata":{"title":"node-postgres","docsLocation":"https://github.com/hasura/gatsby-gitbook-boilerplate/tree/master/content"}},"mdx":{"fields":{"id":"4aea50ea-853e-525f-bb45-cb3a062bc37d","title":"Announcements","slug":"/announcements"},"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"2017-08-12 - code execution vulnerability\"), mdx(\"p\", null, \"Today \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/sehrope\"\n  }), \"@sehrope\"), \" found and reported a code execution vulnerability in node-postgres.  This affects all versions from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pg@2.x\"), \" through \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pg@7.1.0\"), \".\"), mdx(\"p\", null, \"I have published a fix on the tip of each major version branch of all affected versions as well as a fix on each minor version branch of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pg@6.x\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pg@7.x\"), \":\"), mdx(\"h3\", null, \"Fixes\"), mdx(\"p\", null, \"The following versions have been published to npm & contain a patch to fix the vulnerability:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"pg@2.11.2\\npg@3.6.4\\npg@4.5.7\\npg@5.2.1\\npg@6.0.5\\npg@6.1.6\\npg@6.2.5\\npg@6.3.3\\npg@6.4.2\\npg@7.0.3\\npg@7.1.2\\n\")), mdx(\"h3\", null, \"Example\"), mdx(\"p\", null, \"To demonstrate the issue & see if you are vunerable execute the following in node:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const { Client } = require('pg')\\nconst client = new Client()\\nclient.connect()\\n\\nconst sql = `SELECT 1 AS \\\"\\\\\\\\'/*\\\", 2 AS \\\"\\\\\\\\'*/\\\\n + console.log(process.env)] = null;\\\\n//\\\"`\\n\\nclient.query(sql, (err, res) => {\\n  client.end()\\n})\\n\")), mdx(\"p\", null, \"You will see your environment variables printed to your console. An attacker can use this exploit to execute any arbitrary node code within your process.\"), mdx(\"h3\", null, \"Impact\"), mdx(\"p\", null, \"This vulnerability \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"likely\"), \" does not impact you if you are connecting to a database you control and not executing user-supplied sql.  Still, you should \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"absolutely\"), \" upgrade to the most recent patch version as soon as possible to be safe.\"), mdx(\"p\", null, \"Two attack vectors we quickly thought of:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"1 - executing unsafe, user-supplied sql which contains a malicious column name like the one above.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"2 - connecting to an untrusted database and executing a query which returns results where any of the column names are malicious.  \")), mdx(\"h3\", null, \"Support\"), mdx(\"p\", null, \"I have created \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/brianc/node-postgres/issues/1408\"\n  }), \"an issue\"), \" you can use to discuss the vulnerability with me or ask questions, and I have reported this issue \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/briancarlson\"\n  }), \"on twitter\"), \" and directly to Heroku and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://nodesecurity.io/\"\n  }), \"nodesecurity.io\"), \".\"), mdx(\"p\", null, \" I take security very seriously. If you or your company benefit from node-postgres \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"a\", _extends({\n    parentName: \"strong\"\n  }, {\n    \"href\": \"https://www.patreon.com/node_postgres\"\n  }), \"please sponsor my work\")), \": this type of issue is one of the many things I am responsible for, and I want to be able to continue to tirelessly provide a world-class PostgreSQL experience in node for years to come.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"tableOfContents":{"items":[{"url":"#2017-08-12---code-execution-vulnerability","title":"2017-08-12 - code execution vulnerability","items":[{"items":[{"url":"#fixes","title":"Fixes"},{"url":"#example","title":"Example"},{"url":"#impact","title":"Impact"},{"url":"#support","title":"Support"}]}]}]},"parent":{"__typename":"File","relativePath":"announcements.mdx"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/announcements","title":"Announcements"}}},{"node":{"fields":{"slug":"/","title":"Welcome"}}},{"node":{"fields":{"slug":"/api/query-stream","title":"Query Stream"}}},{"node":{"fields":{"slug":"/api/cursor","title":"Cursor"}}},{"node":{"fields":{"slug":"/api/types","title":"Types"}}},{"node":{"fields":{"slug":"/api/result","title":"Result"}}},{"node":{"fields":{"slug":"/api/query","title":"Query"}}},{"node":{"fields":{"slug":"/guides/project-structure","title":"Project Structure"}}},{"node":{"fields":{"slug":"/guides/async-express","title":"Async Express"}}},{"node":{"fields":{"slug":"/guides/upgrading","title":"Upgrading"}}},{"node":{"fields":{"slug":"/features/5-types","title":"Data Types"}}},{"node":{"fields":null}},{"node":{"fields":{"slug":"/features/1-connecting","title":"Connecting"}}},{"node":{"fields":{"slug":"/features/2-queries","title":"Queries"}}},{"node":{"fields":{"slug":"/features/3-pooling","title":"Pooling"}}},{"node":{"fields":{"slug":"/features/4-transactions","title":"Transactions"}}},{"node":{"fields":{"slug":"/features/7-native","title":"Native Bindings"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"4aea50ea-853e-525f-bb45-cb3a062bc37d"}}